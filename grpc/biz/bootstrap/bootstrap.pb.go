// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bootstrap.proto

package bootstrap

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BootstrapRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootstrapRequest) Reset()         { *m = BootstrapRequest{} }
func (m *BootstrapRequest) String() string { return proto.CompactTextString(m) }
func (*BootstrapRequest) ProtoMessage()    {}
func (*BootstrapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e3cc050d1b41a9e, []int{0}
}

func (m *BootstrapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootstrapRequest.Unmarshal(m, b)
}
func (m *BootstrapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootstrapRequest.Marshal(b, m, deterministic)
}
func (m *BootstrapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootstrapRequest.Merge(m, src)
}
func (m *BootstrapRequest) XXX_Size() int {
	return xxx_messageInfo_BootstrapRequest.Size(m)
}
func (m *BootstrapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BootstrapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BootstrapRequest proto.InternalMessageInfo

func (m *BootstrapRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type BootstrapResponse struct {
	ErrCode   int64  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg    string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
	SessionId string `protobuf:"bytes,3,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	// 只有当客户端请求的 sessionId 仍然有效时，返回值为 false, 返回当前的 sessionID
	// 第一次启动、客户端被踢出登录、登录过期等情况，返回值均为 true，返回新生成的 sessionID
	IsNew bool `protobuf:"varint,4,opt,name=isNew,proto3" json:"isNew,omitempty"`
	// 是否为审核模式，待审核状态下，登录界面可能展示的不同
	ReviewMode           bool     `protobuf:"varint,5,opt,name=reviewMode,proto3" json:"reviewMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootstrapResponse) Reset()         { *m = BootstrapResponse{} }
func (m *BootstrapResponse) String() string { return proto.CompactTextString(m) }
func (*BootstrapResponse) ProtoMessage()    {}
func (*BootstrapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e3cc050d1b41a9e, []int{1}
}

func (m *BootstrapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootstrapResponse.Unmarshal(m, b)
}
func (m *BootstrapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootstrapResponse.Marshal(b, m, deterministic)
}
func (m *BootstrapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootstrapResponse.Merge(m, src)
}
func (m *BootstrapResponse) XXX_Size() int {
	return xxx_messageInfo_BootstrapResponse.Size(m)
}
func (m *BootstrapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BootstrapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BootstrapResponse proto.InternalMessageInfo

func (m *BootstrapResponse) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *BootstrapResponse) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *BootstrapResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *BootstrapResponse) GetIsNew() bool {
	if m != nil {
		return m.IsNew
	}
	return false
}

func (m *BootstrapResponse) GetReviewMode() bool {
	if m != nil {
		return m.ReviewMode
	}
	return false
}

func init() {
	proto.RegisterType((*BootstrapRequest)(nil), "crgo.gateway.BootstrapRequest")
	proto.RegisterType((*BootstrapResponse)(nil), "crgo.gateway.BootstrapResponse")
}

func init() {
	proto.RegisterFile("bootstrap.proto", fileDescriptor_5e3cc050d1b41a9e)
}

var fileDescriptor_5e3cc050d1b41a9e = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xca, 0xcf, 0x2f,
	0x29, 0x2e, 0x29, 0x4a, 0x2c, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2e, 0x4a,
	0xcf, 0xd7, 0x4b, 0x4f, 0x2c, 0x49, 0x2d, 0x4f, 0xac, 0x54, 0x32, 0xe0, 0x12, 0x70, 0x82, 0x29,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe1, 0xe2, 0x2c, 0x4e, 0x2d, 0x2e, 0xce,
	0xcc, 0xcf, 0xf3, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x08, 0x28, 0xcd, 0x64,
	0xe4, 0x12, 0x44, 0xd2, 0x52, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc1, 0xc5, 0x9e, 0x5a,
	0x54, 0xe4, 0x9c, 0x9f, 0x92, 0x0a, 0xd6, 0xc1, 0x1c, 0x04, 0xe3, 0x0a, 0x89, 0x71, 0xb1, 0xa5,
	0x16, 0x15, 0xf9, 0x16, 0xa7, 0x4b, 0x30, 0x81, 0x8d, 0x82, 0xf2, 0x50, 0x6d, 0x61, 0x46, 0xb3,
	0x45, 0x48, 0x84, 0x8b, 0x35, 0xb3, 0xd8, 0x2f, 0xb5, 0x5c, 0x82, 0x45, 0x81, 0x51, 0x83, 0x23,
	0x08, 0xc2, 0x11, 0x92, 0xe3, 0xe2, 0x2a, 0x4a, 0x2d, 0xcb, 0x4c, 0x2d, 0xf7, 0x05, 0x59, 0xc4,
	0x0a, 0x96, 0x42, 0x12, 0x31, 0x8a, 0xe4, 0xe2, 0x84, 0x3b, 0x4d, 0xc8, 0x07, 0x99, 0x23, 0xa7,
	0x87, 0xec, 0x6d, 0x3d, 0x74, 0x3f, 0x4b, 0xc9, 0xe3, 0x94, 0x87, 0x78, 0xd0, 0x89, 0x3f, 0x8a,
	0x37, 0x29, 0xb3, 0x4a, 0x1f, 0x1e, 0x9a, 0x49, 0x6c, 0xe0, 0xe0, 0x34, 0x06, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x60, 0x88, 0x8c, 0xd0, 0x61, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BootstrapClient is the client API for Bootstrap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BootstrapClient interface {
	Bootstrap(ctx context.Context, in *BootstrapRequest, opts ...grpc.CallOption) (*BootstrapResponse, error)
}

type bootstrapClient struct {
	cc grpc.ClientConnInterface
}

func NewBootstrapClient(cc grpc.ClientConnInterface) BootstrapClient {
	return &bootstrapClient{cc}
}

func (c *bootstrapClient) Bootstrap(ctx context.Context, in *BootstrapRequest, opts ...grpc.CallOption) (*BootstrapResponse, error) {
	out := new(BootstrapResponse)
	err := c.cc.Invoke(ctx, "/crgo.gateway.Bootstrap/Bootstrap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BootstrapServer is the server API for Bootstrap service.
type BootstrapServer interface {
	Bootstrap(context.Context, *BootstrapRequest) (*BootstrapResponse, error)
}

// UnimplementedBootstrapServer can be embedded to have forward compatible implementations.
type UnimplementedBootstrapServer struct {
}

func (*UnimplementedBootstrapServer) Bootstrap(ctx context.Context, req *BootstrapRequest) (*BootstrapResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bootstrap not implemented")
}

func RegisterBootstrapServer(s *grpc.Server, srv BootstrapServer) {
	s.RegisterService(&_Bootstrap_serviceDesc, srv)
}

func _Bootstrap_Bootstrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootstrapServer).Bootstrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crgo.gateway.Bootstrap/Bootstrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootstrapServer).Bootstrap(ctx, req.(*BootstrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bootstrap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crgo.gateway.Bootstrap",
	HandlerType: (*BootstrapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Bootstrap",
			Handler:    _Bootstrap_Bootstrap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bootstrap.proto",
}
